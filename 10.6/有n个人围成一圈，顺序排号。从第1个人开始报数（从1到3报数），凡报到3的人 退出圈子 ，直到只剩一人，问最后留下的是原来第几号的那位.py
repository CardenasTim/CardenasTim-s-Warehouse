//有n个人围成一圈，顺序排号。从第1个人开始报数（从1到3报数），凡报到3的人 "退出圈子" ，直到只剩一人，问最后留下的是原来第几号的那位。n < 100

#include<iostream>
using namespace std;

int main()
{
	int n = 0;//n为人数
	cin >> n;
	int a[100];
	int b = n;//b为剩余人数
	int i = 0,j=1;//i为报号人序号-1，j为报的号码
	for (; i < n; i++)//给这n个人赋值
	{
		a[i] = 1;
	}
	i = 0;//赋值完成将i归零


	while (1)
	{
		if (b > 1)
		{
			if (i < n)
			{
				if (a[i] == 1)
				{
					if ((j % 3) == 0)
					{
						a[i] = 0;
						j++;
						i++;
						b--;
					}
					else
					{
						j++;
						i++;
					}
				}
				else
				{
					i++;
				}
			}
			else
			{
				i = 0;
			}
		}

		else
		{
			break;
		}
	}

	for (int c = 0; c < n; c++)
	{
		if (a[c] == 1)
		{
			cout << c + 1 << endl;
		}
	}
	return 0;
}

/*
#include<iostream>
using namespace std;
void change(int a[],int n);
int main()
{
	int i,a[50],n;
	cin>>n;
	for(i=0;i<n;i++)
	a[i]=i+1;
	change(a,n);
}
void change(int a[],int n)
{
	int qnumber=0,i=0,k=0;
	while(n-qnumber>1)//直到只剩下1人时
	{
		if(a[i]!=0)k++; //报数
		if(k==3)
		{
			a[i]=0; //退出圈子的人
			qnumber++; //退出的总人数
			k=0; //重新开始报数
		}
		i++;
		if(i==n)i=0; //当所有人都报过数之后重新每人再次报数
	}
	for(i=0;i<n;i++)
	if(a[i]!=0)cout<<a[i]<<" ";
}
*/

/*
1.	第一次构思思路不清晰
	对变量赋值，进行逻辑运算，可以达到“退出圈子”的操作
	如果输入n，再创建n个数的数组较难，不妨直接创建一个较大容量的数组
	剩余人数可以用于决定是否退出循环
	将报号人序号i和报的号码j区分，前期两个变量的变化相同，但后期报号人序号i大于等于n时要重新从0开始，与报的号码变化不同
	写复杂代码切忌边写边想，容易1被噪音打断思路，2不易查错漏点
	正确做法：
	1.圈出题目中的关键词如“退出圈子”“报数”“排号”
	2.将题目中的数据抽象为概念（如行数，列数，号码等有规律的名词），并创建变量，找出变量间的关系，或者变量的变化趋势
	3.将数据取值范围抽象，写出变量取值范围
	4.开始写题纲（伪代码）
		有些操作利用已有变量无法完成时，可以创建新的概念（变量）完成操作
		将一个完整循环语句或条件语句用方框框住，这样语句与语句间的思路就会非常清晰
2.	for语句使用错误
	for（1；2；4）
	{
		3；
	}
	·1是初始化表达式，它通常用于将计数器初始化为其起始值。这是循环执行的第一个动作，只做一次。
	·2是测试表达式。只要这个条件为 true，for 循环的主体将重复。（重点：对了才循环！）
	·4是更新表达式。它在每次迭代结束时执行。
	·3是执行语句。
3.	严格区分=（赋值）与==（相等于）

4.	与答案思路差异
	1.	报到3	1.报的号码j没有上界（j% 3) == 0即报到3	  2.报的号码k只有1，2，3，报到3时，令k=1
	2.	数组赋值	1。全部赋值为1 a[i] = 1;	if (a[c] == 1)cout << c + 1 << endl;		2.全部赋值为i+1 a[i]=i+1;	if(a[i]!=0)cout<<a[i]<<" ";
	3.	思路的最大差异体现在嵌套上，if else语句可以转化为多条或一条if语句，愚认为，嵌套的思路更严谨，不易出错。
*/